var x=Object.defineProperty;var C=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var E=(o,t,s)=>t in o?x(o,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[t]=s,h=(o,t)=>{for(var s in t||(t={}))I.call(t,s)&&E(o,s,t[s]);if(C)for(var s of C(t))L.call(t,s)&&E(o,s,t[s]);return o};import{b as P}from"./base-652be6d9.js";import{H as D}from"./vendor-e78c39f1.js";const l=D("graphql");class S extends P{constructor(t,s,e){super({step:"IDLE"});this.endpoint=t,this.query=s,this.options=e,this.runtimeVariables={}}acknowledgeError(){this.setPartial({error:void 0})}prefetch(t){this.options.prefetchCallback&&this.options.prefetchCallback(t)}async fetch(t){var d,b,y,g,m,k,v;const s=typeof((b=(d=this.options)==null?void 0:d.variables)==null?void 0:b.first)=="number"?(g=(y=this.options)==null?void 0:y.variables)==null?void 0:g.first:1e3;let e=s,r="0x0",p,c;for(;e===s;)try{const n=h(h(h({first:s,lastId:r},(m=this.options)==null?void 0:m.variables),this.runtimeVariables),t),q=this.query.split("?");let w="";for(let i=0;i<q.length;i++){const a=q[i];a.startsWith("$")?n[a.substr(1)]||i++:w+=a}this.prefetch(n);const f=await this.endpoint.query(w,{variables:n,context:{requestPolicy:"cache-and-network"}});if(!f.data)throw this.setPartial({error:"cannot fetch from thegraph node"}),new Error("cannot fetch from thegraph node");const u=((k=this.options)==null?void 0:k.path)?f.data[this.options.path]:f.data;if(p||(p=u),(v=this.options)==null?void 0:v.list){let i=u;if(typeof this.options.list!="boolean"&&this.options.list.path&&(i=u[this.options.list.path]),e=i.length,e>0){const a=typeof this.options.list!="boolean"&&this.options.list.getLastId!==void 0?this.options.list.getLastId(i):i[e-1].id;if(r===a){l.log("same query, stop");break}r=a}c?c.push(...i):c=i}else e=0}catch(n){e=0,l.error(n)}this.setPartial({data:p,step:"READY"})}}class j extends S{constructor(t,s,e,r){super(t,s,r);this.listenerCount=0,this.hook=e}acknowledgeError(){this.setPartial({error:void 0})}subscribe(t,s){this.listenerCount++,this.listenerCount===1&&(l.info("start fetching"),this.stopUpdates=this.hook.subscribe(r=>this.fetch({blockNumber:r.lastBlockNumber})));const e=this.store.subscribe(t,s);return()=>{this.listenerCount--,this.listenerCount===0&&(l.info("stop fetching"),this.stopUpdates&&(this.stopUpdates(),this.stopUpdates=void 0)),e()}}}export{j as H};
//# sourceMappingURL=graphql-582eebcc.js.map
