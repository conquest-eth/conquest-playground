var P=Object.defineProperty;var f=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var u=(c,t,e)=>t in c?P(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e,m=(c,t)=>{for(var e in t||(t={}))v.call(t,e)&&u(c,e,t[e]);if(f)for(var e of f(t))T.call(t,e)&&u(c,e,t[e]);return c};import{F as g}from"./vendor-e78c39f1.js";import{s as S}from"./optimisticSpace-8b3fc51e.js";import{t as y,a as p}from"./wallet-c826be1b.js";import{x as d}from"./account-c0a26acd.js";import{s as h}from"./spaceInfo-b394211b.js";const b=g({});class w{constructor(){this.planetListeners={},this.listenerIndex=0,this.listeners={},this.metadataTable={},this.started=!1}start(){this.started||(this.started=!0,y.subscribe(this.onTime.bind(this)),S.subscribe(this.onSpaceUpdate.bind(this)),b.subscribe(this.onMetadataUpdated.bind(this)))}onPlannetUpdates(t,e){this.listenerIndex++,this.listeners[this.listenerIndex]={planetInfo:t,func:e};let i=this.planetListeners[t.location.id];return i||(i=[]),i.push(this.listenerIndex),this.planetListeners[t.location.id]=i,this.spaceStateCache&&this.processSpace(this.spaceStateCache,p()),this.listenerIndex}switchOffPlanetUpdates(t){const{planetInfo:e}=this.listeners[t];delete this.listeners[t];const i=e.location.id,s=this.planetListeners[i];if(s){const o=s.length;for(let a=0;a<o;a++){const n=s[a];this.listeners[n]||(s.splice(a,1),s.length===0&&delete this.planetListeners[i])}}}onTime(){this.spaceStateCache&&this.processSpace(this.spaceStateCache,p())}onSpaceUpdate(t){if(!t.queryState.data){console.log("hmmm, no data...");return}this.spaceStateCache=t,this.pendingActionsPerPlanet={};for(const e of t.pendingActions)if(e.action.type==="CAPTURE"){const i=d(e.action.planetCoords.x,e.action.planetCoords.y);(this.pendingActionsPerPlanet[i]=this.pendingActionsPerPlanet[i]||[]).push(e)}else if(e.action.type==="SEND"){const i=d(e.action.from.x,e.action.from.y);(this.pendingActionsPerPlanet[i]=this.pendingActionsPerPlanet[i]||[]).push(e)}else if(e.action.type==="EXIT"){const i=d(e.action.planetCoords.x,e.action.planetCoords.y);(this.pendingActionsPerPlanet[i]=this.pendingActionsPerPlanet[i]||[]).push(e)}this.processSpace(t,p())}onMetadataUpdated(t){this.metadataTable=t,this.spaceStateCache&&this.processSpace(this.spaceStateCache,p())}processSpace(t,e){if(!t.queryState.data)return;const i={};for(const o of t.queryState.data.planets)i[o.id]=o;const s=Object.keys(this.planetListeners);for(const o of s){const a=this.planetListeners[o];if(a.length>0){const n=this.listeners[a[0]],l=this._transformPlanet(n.planetInfo,t.queryState.data,this.pendingActionsPerPlanet,i[n.planetInfo.location.id],e);this._call(a,l)}}}_transformPlanet(t,e,i,s,o){const a=t.location.x>=e.space.x1&&t.location.x<=e.space.x2&&t.location.y>=e.space.y1&&t.location.y<=e.space.y2,n={owner:void 0,lastUpdatedSaved:0,startExitTime:0,active:!1,numSpaceships:t.stats.natives,flagTime:0,travelingUpkeep:0,overflow:0,exiting:!1,exitTimeLeft:0,natives:!0,capturing:!1,inReach:a,rewardGiver:"",requireClaimAcknowledgement:void 0,metadata:{}};this.metadataTable[t.location.id]&&(n.metadata=m({},this.metadataTable[t.location.id])),s&&(n.natives=!s.active&&(s.owner==="0x0000000000000000000000000000000000000000"||s.numSpaceships==0),n.lastUpdatedSaved=s.lastUpdated,n.startExitTime=s.exitTime,n.owner=s.owner,n.flagTime=s.flagTime,n.active=s.active,n.rewardGiver=s.rewardGiver?s.rewardGiver:"",n.numSpaceships=s.numSpaceships,n.travelingUpkeep=s.travelingUpkeep,n.overflow=s.overflow,n.exiting=!!s.exitTime,n.exitTimeLeft=Math.max(h.exitDuration-(o-s.exitTime),0),h.computePlanetUpdateForTimeElapsed(n,t,o),n.lastUpdatedSaved=o,n.natives&&(n.numSpaceships=t.stats.natives));const l=i[t.location.id];if(l){for(const r of l)if(!(r.status==="LOADING"&&p()-r.action.timestamp>60)&&r.status!=="FAILURE"){{if(r.status==="CANCELED")continue;if(r.status==="TIMEOUT")continue}r.counted?r.action.acknowledged||r.action.type==="CAPTURE"&&(n.requireClaimAcknowledgement=r.id):r.action.type==="CAPTURE"?n.capturing=!0:r.action.type==="SEND"?n.numSpaceships-=r.action.quantity:r.action.type==="EXIT"&&(n.exiting=!0,n.exitTimeLeft=h.exitDuration)}}return n}_call(t,e){const i=t.length;for(let s=0;s<i;s++){const o=t[s],a=this.listeners[o];a&&a.func(e)}}}const x=new w;class A{constructor(){this.stores={}}planetStateFor(t){const e=t.location.id;let i=this.stores[e];return i||(i=g(void 0,s=>{this.stores[e]=i;const o=x.onPlannetUpdates(t,a=>{s(a)});return()=>{x.switchOffPlanetUpdates(o)}})),i}}const q=new A;export{x as a,b,q as p};
//# sourceMappingURL=planets-78a3d361.js.map
